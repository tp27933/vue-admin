{"remainingRequest":"C:\\Users\\missj\\OneDrive\\桌面\\vue\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\missj\\OneDrive\\桌面\\vue\\vue-admin\\src\\views\\Login\\index.vue?vue&type=style&index=0&id=aeba673c&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\missj\\OneDrive\\桌面\\vue\\vue-admin\\src\\views\\Login\\index.vue","mtime":1603956166761},{"path":"C:\\Users\\missj\\OneDrive\\桌面\\vue\\vue-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\missj\\OneDrive\\桌面\\vue\\vue-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\missj\\OneDrive\\桌面\\vue\\vue-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\missj\\OneDrive\\桌面\\vue\\vue-admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\missj\\OneDrive\\桌面\\vue\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\missj\\OneDrive\\桌面\\vue\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQojbG9naW4gew0KICBoZWlnaHQ6IDEwMHZoOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQ0YTVmOw0KfQ0KLmxvZ2luX3dyYXAgew0KICB3aWR0aDogMzMwcHg7DQogIG1hcmdpbjogYXV0bzsNCn0NCi5tZW51LXRhYiB7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgbGkgew0KICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgICB3aWR0aDogODhweDsNCiAgICBoZWlnaHQ6IDM2cHg7DQogICAgbGluZS1oZWlnaHQ6IDM2cHg7DQogICAgZm9udC1zaXplOiAxNHB4Ow0KICAgIGNvbG9yOiAjZmZmZjsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KICB9DQp9DQouY3VycmVudCB7DQogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xKTsNCn0NCg0KLy/ooajllq4gOnN0YXJ0DQoNCi5sb2dpbl9mb3JtIHsNCiAgbWFyZ2luLXRvcDogMjlweDsNCiAgbGFiZWwgew0KICAgIGRpc3BsYXk6IGJsb2NrOw0KICAgIG1hcmdpbi1ib3R0b206IDNweDsNCiAgICBmb250LXNpemU6IDE0cHg7DQogICAgY29sb3I6ICNmZmZmOw0KICB9DQp9DQouaXRlbV9mb3JtIHsNCiAgbWFyZ2luLWJvdHRvbTogMTNweDsNCn0NCi5ibG9jayB7DQogIHdpZHRoOiAxMDAlOw0KICBkaXNwbGF5OiBibG9jazsNCn0NCi5tYXJnaW5fdG9wIHsNCiAgbWFyZ2luLXRvcDogMjVweDsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Login","sourcesContent":["<template>\r\n  <div id=\"login\">\r\n    <div class=\"login_wrap\">\r\n      <ul class=\"menu-tab\">\r\n        <!---表單切換面板-->\r\n        <li\r\n          v-for=\"(item, index) in menuTab\"\r\n          :key=\"item.id\"\r\n          @click=\"toggleMenu(item, index)\"\r\n          :class=\"{ current: selected == index }\"\r\n        >\r\n          {{ item.txt }}\r\n        </li>\r\n      </ul>\r\n\r\n      <!---表單 start-->\r\n      <el-form\r\n        :model=\"ruleForm\"\r\n        status-icon\r\n        :rules=\"rules\"\r\n        ref=\"loginForm\"\r\n        class=\"login_form\"\r\n        size=\"medium\"\r\n      >\r\n        <el-form-item prop=\"uesername\" class=\"item_form\">\r\n          <label>郵箱</label>\r\n          <el-input type=\"text\" v-model=\"ruleForm.uesername\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"paw\" class=\"item_form\" minlength=\"6\" maxlength=\"20\">\r\n          <label>密碼</label>\r\n          <el-input type=\"text\" v-model=\"ruleForm.paw\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item\r\n          prop=\"paws\"\r\n          class=\"item_form\"\r\n          v-if=\"model === 'register'\"\r\n          minlength=\"6\"\r\n          maxlength=\"20\"\r\n        >\r\n          <label>重複密碼</label>\r\n          <el-input type=\"text\" v-model=\"ruleForm.paws\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"code\" class=\"item_form\">\r\n          <label>驗證碼</label>\r\n          <el-row :gutter=\"10\">\r\n            <el-col :span=\"15\">\r\n              <el-input v-model.trim=\"ruleForm.code\" minlength=\"6\" maxlength=\"20\"></el-input>\r\n            </el-col>\r\n\r\n            <el-col :span=\"9\">\r\n              <el-button\r\n                type=\"success\"\r\n                class=\"block\"\r\n                @click=\"outSms()\"\r\n                :disabled=\"codeButtonSatus.satus\"\r\n              >\r\n                {{ codeButtonSatus.text }}\r\n              </el-button>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form-item>\r\n\r\n        <!---送出按鈕-->\r\n        <el-form-item>\r\n          <el-button\r\n            type=\"danger\"\r\n            class=\"margin_top block\"\r\n            @click=\"submitForm('loginForm')\"\r\n            :disabled=\"loginButtonSatus\"\r\n          >\r\n            {{ model == 'login' ? '登入' : '註冊' }}\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n//引入攔截請求\r\nimport { getSms, register, Login } from '@/api/login';\r\n//vue3.0 composition-api\r\nimport { reactive, ref, onMounted } from '@vue/composition-api';\r\n//引入封裝過後的函數\r\nimport { stripscript, validateEmail, validatePass, validateCo } from '@/utils/validate';\r\n\r\nexport default {\r\n  name: 'login',\r\n\r\n  setup(props, { root, refs }) {\r\n    //驗證用戶名\r\n    let validateUersname = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('請輸入用戶  '));\r\n      } else if (validateEmail(value)) {\r\n        callback(new Error('用戶格式有誤'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    //驗證密碼\r\n    let validatePassword = (rule, value, callback) => {\r\n      ruleForm.paw = stripscript(value);\r\n      value = ruleForm.paw;\r\n\r\n      if (value === '') {\r\n        callback(new Error('請輸入密碼'));\r\n      } else if (validatePass(value)) {\r\n        callback(new Error('密碼為6至20數字和字母'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    //驗證重複密碼\r\n    var validatePasswords = (rule, value, callback) => {\r\n      ruleForm.paws = stripscript(value);\r\n      value = ruleForm.paws;\r\n      if (model / value === 'login') {\r\n        callback();\r\n      }\r\n      if (value === '') {\r\n        callback(new Error('請輸入密碼'));\r\n      } else if (value != ruleForm.paw) {\r\n        callback(new Error('密碼不一致'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    //驗證表單\r\n    var validatecode = (rule, value, callback) => {\r\n      if (value === '') {\r\n        return callback(new Error('請輸入驗證碼'));\r\n      } else if (validateCo(value)) {\r\n        return callback(new Error('驗證碼格式有誤'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    //---------------====數據聲明------------------------------//\r\n\r\n    const menuTab = reactive([\r\n      { txt: '登入', type: 'login' },\r\n      { txt: '註冊', type: 'register' }\r\n    ]);\r\n\r\n    //模塊值\r\n    const model = ref('login');\r\n    const selected = ref('0');\r\n    const timer = ref(null);\r\n    const codeButtonSatus = reactive({\r\n      satus: false,\r\n      text: '獲取驗證碼'\r\n    });\r\n    const loginButtonSatus = ref(true);\r\n\r\n    //表單數據\r\n    const ruleForm = reactive({\r\n      uesername: '',\r\n      paw: '',\r\n      paws: '',\r\n      code: ''\r\n    });\r\n\r\n    const rules = reactive({\r\n      uesername: [{ validator: validateUersname, trigger: 'blur' }],\r\n      paw: [{ validator: validatePassword, trigger: 'blur' }],\r\n      paws: [{ validator: validatePasswords, trigger: 'blur' }],\r\n      code: [{ validator: validatecode, trigger: 'blur' }]\r\n    });\r\n\r\n    //--------------------函數聲明------------------------------//\r\n\r\n    //切換功能\r\n    const toggleMenu = (item, index) => {\r\n      selected.value = index;\r\n      model.value = item.type;\r\n      //this.$refs[formName].resetFields();\r\n      refs['loginForm'].resetFields();\r\n      clearCountDown();\r\n    };\r\n\r\n    //\r\n    const outSms = () => {\r\n      if (ruleForm.uesername == '') {\r\n        root.$message.error('信箱不能為空');\r\n        clearCountDown();\r\n        return false;\r\n      }\r\n      if (validateEmail(ruleForm.uesername)) {\r\n        root.$message.error('信箱格式有誤，請重新輸入');\r\n        clearCountDown();\r\n        return false;\r\n      }\r\n\r\n      //信箱輸入正確後才發送axious請求\r\n      let responseData = {\r\n        username: ruleForm.uesername,\r\n        module: model.value\r\n      };\r\n      codeButtonSatus.satus = true;\r\n      codeButtonSatus.text = '發送中';\r\n      getSms(responseData)\r\n        .then(response => {\r\n          let data = response.data;\r\n          root.$message({\r\n            message: data.message,\r\n            type: 'success'\r\n          });\r\n          console.log(response);\r\n\r\n          loginButtonSatus.value = false;\r\n          countDown(5);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    //送出請求\r\n    const submitForm = formName => {\r\n      refs[formName].validate(valid => {\r\n        /*注意!!使用v-show 重複輸入密碼的輸入框沒有消失，\r\n        在登入時會因為重複密碼沒有輸入到而讓vaild返回false，所以必須用v-if!!!!*/\r\n        if (valid) {\r\n          model.value === 'login' ? loginOut() : registerOut();\r\n        } else {\r\n          console.log('error submit!!');\r\n          return false;\r\n        }\r\n      });\r\n    };\r\n    //倒數計時\r\n    const countDown = number => {\r\n      var time = number;\r\n      //計時再次發送驗證碼時間\r\n      timer.value = setInterval(() => {\r\n        time--;\r\n        if (time === 0) {\r\n          clearInterval(timer.value);\r\n          codeButtonSatus.satus = false;\r\n          codeButtonSatus.text = '再次發送';\r\n        } else {\r\n          codeButtonSatus.text = `倒數計時${time}秒`;\r\n        }\r\n      }, 1000);\r\n    };\r\n    //登入請求\r\n    const loginOut = () => {\r\n      //獲取用戶登入資訊\r\n      let requestData = {\r\n        username: ruleForm.uesername,\r\n        password: ruleForm.paw,\r\n        code: ruleForm.code\r\n      };\r\n      //  Login(requestData)\r\n      //   .then(response => {\r\n      root.$store\r\n        .dispatch('app/login', requestData)\r\n        .then(response => {\r\n          root.$router.push({\r\n            name: 'Operation'\r\n          });\r\n        })\r\n        .catch(error => {\r\n          return false;\r\n        });\r\n    };\r\n\r\n    //註冊請求\r\n    const registerOut = () => {\r\n      //獲取用戶註冊訊息\r\n      let reguestData = {\r\n        username: ruleForm.uesername,\r\n        password: ruleForm.paw,\r\n        code: ruleForm.code,\r\n        module: 'register'\r\n      };\r\n\r\n      register(reguestData)\r\n        .then(response => {\r\n          let data = response.data;\r\n          root.$message({\r\n            message: data.message,\r\n            type: 'success'\r\n          });\r\n          //註冊完後頁面自動跳轉到登入頁面\r\n          toggleMenu(menuTab[0]);\r\n          clearCountDown();\r\n        })\r\n        .catch(error => {});\r\n    };\r\n    //清除倒數計時\r\n    const clearCountDown = () => {\r\n      codeButtonSatus.satus = false;\r\n      codeButtonSatus.text = '獲取驗證碼';\r\n      clearInterval(timer.value);\r\n    };\r\n\r\n    //生命週期\r\n    onMounted(() => {});\r\n    return {\r\n      menuTab,\r\n      model,\r\n      selected,\r\n      ruleForm,\r\n      timer,\r\n      codeButtonSatus,\r\n      loginButtonSatus,\r\n      countDown,\r\n      rules,\r\n      toggleMenu,\r\n      clearCountDown,\r\n      submitForm,\r\n      outSms,\r\n      Login\r\n    };\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n#login {\r\n  height: 100vh;\r\n  background-color: #344a5f;\r\n}\r\n.login_wrap {\r\n  width: 330px;\r\n  margin: auto;\r\n}\r\n.menu-tab {\r\n  text-align: center;\r\n  li {\r\n    display: inline-block;\r\n    width: 88px;\r\n    height: 36px;\r\n    line-height: 36px;\r\n    font-size: 14px;\r\n    color: #ffff;\r\n    border-radius: 2px;\r\n    cursor: pointer;\r\n  }\r\n}\r\n.current {\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n//表單 :start\r\n\r\n.login_form {\r\n  margin-top: 29px;\r\n  label {\r\n    display: block;\r\n    margin-bottom: 3px;\r\n    font-size: 14px;\r\n    color: #ffff;\r\n  }\r\n}\r\n.item_form {\r\n  margin-bottom: 13px;\r\n}\r\n.block {\r\n  width: 100%;\r\n  display: block;\r\n}\r\n.margin_top {\r\n  margin-top: 25px;\r\n}\r\n</style>\r\n"]}]}